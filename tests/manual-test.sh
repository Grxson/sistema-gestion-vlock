#!/bin/bash

# Script de pruebas manuales para el m√≥dulo de Suministros
# Este script gu√≠a al usuario a trav√©s de las pruebas paso a paso

echo "üß™ SCRIPT DE PRUEBAS MANUALES - M√ìDULO SUMINISTROS"
echo "=================================================="
echo ""

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para esperar confirmaci√≥n del usuario
wait_for_user() {
    echo ""
    read -p "Presiona Enter cuando hayas completado esta prueba..."
    echo ""
}

# Funci√≥n para preguntar si la prueba pas√≥
ask_test_result() {
    local test_name="$1"
    echo -e "${YELLOW}¬øLa prueba '$test_name' fue exitosa? (s/n):${NC}"
    read -r result
    if [[ $result == "s" || $result == "S" ]]; then
        echo -e "${GREEN}‚úÖ PAS√ì: $test_name${NC}"
        return 0
    else
        echo -e "${RED}‚ùå FALL√ì: $test_name${NC}"
        return 1
    fi
}

# Inicializar contadores
passed_tests=0
failed_tests=0
total_tests=0

# Funci√≥n para registrar resultado
record_test() {
    if ask_test_result "$1"; then
        ((passed_tests++))
    else
        ((failed_tests++))
    fi
    ((total_tests++))
}

echo -e "${BLUE}üìã INSTRUCCIONES GENERALES:${NC}"
echo "1. Aseg√∫rate de que el frontend est√© corriendo en http://localhost:3000"
echo "2. Aseg√∫rate de que el backend est√© corriendo"
echo "3. Ten credenciales v√°lidas para hacer login"
echo "4. Sigue cada paso cuidadosamente"
echo ""

wait_for_user

echo "üîê M√ìDULO 1: AUTENTICACI√ìN"
echo "========================="

echo -e "${YELLOW}Prueba 1.1: Login con credenciales v√°lidas${NC}"
echo "- Ve a http://localhost:3000"
echo "- Ingresa credenciales v√°lidas"
echo "- Verifica que aparezca mensaje de bienvenida"
echo "- Confirma que redirija al dashboard"
wait_for_user
record_test "Login con credenciales v√°lidas"

echo -e "${YELLOW}Prueba 1.2: Sesi√≥n persistente${NC}"
echo "- Recarga la p√°gina (F5)"
echo "- Verifica que la sesi√≥n se mantenga"
echo "- No deber√≠a redirigir al login"
wait_for_user
record_test "Sesi√≥n persistente"

echo ""
echo "üì¶ M√ìDULO 2: NAVEGACI√ìN A SUMINISTROS"
echo "====================================="

echo -e "${YELLOW}Prueba 2.1: Acceso al m√≥dulo de Suministros${NC}"
echo "- Busca el enlace/men√∫ de 'Suministros' en la interfaz"
echo "- Haz clic en √©l"
echo "- Verifica que cargue la p√°gina de suministros"
echo "- La URL deber√≠a contener '/suministros'"
wait_for_user
record_test "Acceso al m√≥dulo de Suministros"

echo -e "${YELLOW}Prueba 2.2: Carga de lista de suministros${NC}"
echo "- Verifica que aparezca una tabla/lista de suministros"
echo "- Comprueba que los datos se carguen correctamente"
echo "- Observa si hay indicadores de carga"
wait_for_user
record_test "Carga de lista de suministros"

echo ""
echo "üîç M√ìDULO 3: FUNCIONALIDADES DE B√öSQUEDA Y FILTROS"
echo "=================================================="

echo -e "${YELLOW}Prueba 3.1: B√∫squeda de suministros${NC}"
echo "- Busca un campo de b√∫squeda/filtro"
echo "- Escribe alg√∫n t√©rmino de b√∫squeda"
echo "- Verifica que la lista se filtre correctamente"
echo "- Borra el t√©rmino y verifica que vuelvan todos los resultados"
wait_for_user
record_test "B√∫squeda de suministros"

echo -e "${YELLOW}Prueba 3.2: Filtros por categor√≠a/tipo${NC}"
echo "- Busca dropdowns o filtros de categor√≠a"
echo "- Selecciona diferentes opciones"
echo "- Verifica que la lista se filtre seg√∫n la selecci√≥n"
wait_for_user
record_test "Filtros por categor√≠a"

echo ""
echo "‚ûï M√ìDULO 4: CREACI√ìN DE SUMINISTROS"
echo "===================================="

echo -e "${YELLOW}Prueba 4.1: Abrir formulario de nuevo suministro${NC}"
echo "- Busca y haz clic en bot√≥n 'Nuevo' o 'Agregar Suministro'"
echo "- Verifica que se abra un formulario/modal"
echo "- Observa que todos los campos necesarios est√©n presentes"
wait_for_user
record_test "Abrir formulario de nuevo suministro"

echo -e "${YELLOW}Prueba 4.2: Validaciones del formulario${NC}"
echo "- Intenta guardar el formulario vac√≠o"
echo "- Verifica que aparezcan mensajes de validaci√≥n"
echo "- Prueba con datos inv√°lidos (n√∫meros negativos, textos muy largos)"
echo "- Confirma que las validaciones funcionen"
wait_for_user
record_test "Validaciones del formulario"

echo -e "${YELLOW}Prueba 4.3: Crear suministro v√°lido${NC}"
echo "- Llena todos los campos obligatorios con datos v√°lidos:"
echo "  * Nombre: 'Suministro Test Manual'"
echo "  * C√≥digo: 'MANUAL001'"
echo "  * Descripci√≥n: 'Prueba manual del sistema'"
echo "  * Cantidad: '10'"
echo "  * Precio: '100.50'"
echo "- Selecciona opciones en dropdowns si las hay"
echo "- Haz clic en 'Guardar'"
echo "- Verifica mensaje de √©xito"
wait_for_user
record_test "Crear suministro v√°lido"

echo -e "${YELLOW}Prueba 4.4: Verificar suministro en lista${NC}"
echo "- Busca el suministro reci√©n creado en la lista"
echo "- Verifica que aparezca con los datos correctos"
echo "- Usa la b√∫squeda para encontrarlo si es necesario"
wait_for_user
record_test "Verificar suministro en lista"

echo ""
echo "‚úèÔ∏è M√ìDULO 5: EDICI√ìN DE SUMINISTROS"
echo "==================================="

echo -e "${YELLOW}Prueba 5.1: Abrir formulario de edici√≥n${NC}"
echo "- Busca el bot√≥n de 'Editar' en el suministro que creaste"
echo "- Haz clic en √©l"
echo "- Verifica que se abra el formulario con los datos precargados"
wait_for_user
record_test "Abrir formulario de edici√≥n"

echo -e "${YELLOW}Prueba 5.2: Modificar y guardar suministro${NC}"
echo "- Cambia algunos valores (ej: cantidad a '15', precio a '120.75')"
echo "- Haz clic en 'Guardar' o 'Actualizar'"
echo "- Verifica mensaje de √©xito"
echo "- Confirma que los cambios se reflejen en la lista"
wait_for_user
record_test "Modificar y guardar suministro"

echo ""
echo "üóëÔ∏è M√ìDULO 6: ELIMINACI√ìN DE SUMINISTROS"
echo "======================================="

echo -e "${YELLOW}Prueba 6.1: Eliminar suministro individual${NC}"
echo "- Busca el bot√≥n de 'Eliminar' en alg√∫n suministro"
echo "- Haz clic en √©l"
echo "- Verifica que aparezca un mensaje de confirmaci√≥n"
echo "- Confirma la eliminaci√≥n"
echo "- Verifica que el suministro desaparezca de la lista"
wait_for_user
record_test "Eliminar suministro individual"

echo ""
echo "üì± M√ìDULO 7: RESPONSIVIDAD"
echo "========================="

echo -e "${YELLOW}Prueba 7.1: Vista en dispositivos m√≥viles${NC}"
echo "- Abre las herramientas de desarrollador (F12)"
echo "- Activa el modo de dispositivo m√≥vil"
echo "- Verifica que la interfaz se adapte correctamente"
echo "- Prueba las funcionalidades principales en vista m√≥vil"
wait_for_user
record_test "Vista en dispositivos m√≥viles"

echo ""
echo "‚ö° M√ìDULO 8: RENDIMIENTO"
echo "======================="

echo -e "${YELLOW}Prueba 8.1: Tiempo de carga${NC}"
echo "- Recarga la p√°gina de suministros (F5)"
echo "- Observa el tiempo que tarda en cargar completamente"
echo "- Deber√≠a cargar en menos de 5 segundos con conexi√≥n normal"
wait_for_user
record_test "Tiempo de carga"

echo -e "${YELLOW}Prueba 8.2: Fluidez de la interfaz${NC}"
echo "- Navega entre diferentes secciones"
echo "- Abre y cierra formularios"
echo "- Verifica que no haya lag o congelamiento"
wait_for_user
record_test "Fluidez de la interfaz"

echo ""
echo "üîß M√ìDULO 9: FUNCIONALIDADES AVANZADAS"
echo "======================================"

echo -e "${YELLOW}Prueba 9.1: Paginaci√≥n (si existe)${NC}"
echo "- Si hay muchos suministros, busca controles de paginaci√≥n"
echo "- Navega entre p√°ginas"
echo "- Verifica que funcione correctamente"
wait_for_user
record_test "Paginaci√≥n"

echo -e "${YELLOW}Prueba 9.2: Ordenamiento (si existe)${NC}"
echo "- Haz clic en encabezados de columnas de la tabla"
echo "- Verifica que ordene ascendente/descendente"
echo "- Prueba con diferentes columnas"
wait_for_user
record_test "Ordenamiento"

echo -e "${YELLOW}Prueba 9.3: Exportaci√≥n (si existe)${NC}"
echo "- Busca opciones de exportar/descargar datos"
echo "- Prueba la funcionalidad si est√° disponible"
wait_for_user
record_test "Exportaci√≥n"

echo ""
echo "üö® M√ìDULO 10: MANEJO DE ERRORES"
echo "==============================="

echo -e "${YELLOW}Prueba 10.1: Manejo de errores de red${NC}"
echo "- Desconecta temporalmente internet o det√©n el backend"
echo "- Intenta realizar alguna operaci√≥n"
echo "- Verifica que aparezcan mensajes de error apropiados"
echo "- Reconecta y verifica que vuelva a funcionar"
wait_for_user
record_test "Manejo de errores de red"

# Resumen final
echo ""
echo "üìä RESUMEN DE PRUEBAS"
echo "===================="
echo -e "${GREEN}‚úÖ Pruebas exitosas: $passed_tests${NC}"
echo -e "${RED}‚ùå Pruebas fallidas: $failed_tests${NC}"
echo -e "${BLUE}üìà Total de pruebas: $total_tests${NC}"

if [ $failed_tests -eq 0 ]; then
    echo ""
    echo -e "${GREEN}üéâ ¬°Todas las pruebas pasaron! El m√≥dulo de Suministros est√° listo para producci√≥n.${NC}"
else
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  Se encontraron $failed_tests fallas. Revisa los problemas antes de pasar a producci√≥n.${NC}"
fi

echo ""
echo "üìù RECOMENDACIONES FINALES:"
echo "- Documenta cualquier problema encontrado"
echo "- Repite las pruebas que fallaron despu√©s de corregir"
echo "- Considera crear casos de prueba automatizados para el futuro"
echo ""

echo "‚úÖ Pruebas manuales completadas. ¬°Gracias por probar el sistema!"
