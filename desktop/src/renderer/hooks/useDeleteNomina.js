import { useCallback } from 'react';
import useConfirmModal from './useConfirmModal';
import nominasServices from '../services/nominas';

/**
 * Hook personalizado para manejar la eliminaci√≥n de n√≥minas
 * @param {Function} onSuccess - Funci√≥n a ejecutar despu√©s de eliminar exitosamente
 * @param {Function} onError - Funci√≥n a ejecutar en caso de error
 * @returns {Object} Objeto con funciones y estado del modal de confirmaci√≥n
 */
const useDeleteNomina = (onSuccess, onError) => {
  console.log('üîç [useDeleteNomina] Hook inicializado');
  const confirmModal = useConfirmModal();

  /**
   * Funci√≥n para eliminar una n√≥mina
   * @param {Object} empleado - Datos del empleado
   * @param {Object} nomina - Datos de la n√≥mina a eliminar
   */
  const deleteNomina = useCallback((empleado, nomina) => {
    // Verificar el estado de la n√≥mina
    const estado = nomina.estado?.toLowerCase();
    if (estado === 'pagada' || estado === 'pagado' || estado === 'completada' || estado === 'completado') {
      onError?.('No se puede eliminar una n√≥mina que ya est√° completada o pagada');
      return;
    }

    // Configurar datos del modal de confirmaci√≥n
    const confirmData = {
      title: 'Eliminar N√≥mina',
      message: `¬øEst√°s seguro de que deseas eliminar la n√≥mina de ${empleado.nombre} ${empleado.apellido}?\n\nEsta acci√≥n es permanente y eliminar√°:\n‚Ä¢ La n√≥mina del empleado\n‚Ä¢ El historial de cambios\n‚Ä¢ Los pagos relacionados\n\nEsta acci√≥n no se puede deshacer.`,
      type: 'danger',
      confirmText: 'Eliminar',
      cancelText: 'Cancelar',
      onConfirm: async () => {
        try {
          console.log('üîç [ELIMINAR] Usuario confirm√≥ eliminaci√≥n');
          
          // Llamar al servicio de eliminaci√≥n
          const response = await nominasServices.nominas.delete(nomina.id_nomina);
          
          if (response.success) {
            console.log('‚úÖ [ELIMINAR] N√≥mina eliminada exitosamente');
            onSuccess?.('N√≥mina eliminada correctamente');
          } else {
            console.error('‚ùå [ELIMINAR] Error en respuesta del servicio:', response);
            onError?.(response.message || 'No se pudo eliminar la n√≥mina');
          }
        } catch (error) {
          console.error('‚ùå [ELIMINAR] Error eliminando n√≥mina:', error);
          onError?.('No se pudo eliminar la n√≥mina');
        }
      },
      onCancel: () => {
        console.log('üîç [ELIMINAR] Usuario cancel√≥ eliminaci√≥n');
      }
    };

    // Mostrar modal de confirmaci√≥n
    confirmModal.showConfirm(confirmData);
  }, [confirmModal, onSuccess, onError]);

  return {
    ...confirmModal,
    deleteNomina
  };
};

export default useDeleteNomina;
